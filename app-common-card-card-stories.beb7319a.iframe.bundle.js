(self.webpackChunkpete_resume=self.webpackChunkpete_resume||[]).push([[564],{"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./src/app/common/card/card.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./src/app/common/card/card.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Alternate:()=>Alternate,AlternateCardList:()=>AlternateCardList,CardList:()=>CardList,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>card_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var cardngResource=__webpack_require__("./src/app/common/card/card.scss?ngResource"),cardngResource_default=__webpack_require__.n(cardngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),debug_node=__webpack_require__("./node_modules/@angular/core/fesm2022/debug_node.mjs");let ResumeCard=class ResumeCard{card=core.input.required();isAlternate=(0,core.input)(!1);static propDecorators={card:[{type:debug_node.pde,args:[{isSignal:!0,alias:"card",required:!0,transform:void 0}]}],isAlternate:[{type:debug_node.pde,args:[{isSignal:!0,alias:"isAlternate",required:!1,transform:void 0}]}]}};ResumeCard=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"app-resume-card",imports:[],template:'<div [class.alternate-card]="isAlternate()" [class.card]="!isAlternate()">\n  <div class="card-header">\n    <h3>{{ card().title }}</h3>\n    <span class="card-subtitle">{{ card().subTitle }}</span>\n  </div>\n  @if (card().itemsHeader) {\n    <h4>{{ card().itemsHeader }}</h4>\n  }\n\n  @for (item of card().items; track $index) {\n    <p>{{ item }}</p>\n  }\n</div>\n',styles:[cardngResource_default()]})],ResumeCard);const card_stories={title:"Resume/Card",component:ResumeCard,decorators:[]},Default={args:{card:{title:"Sample Card",itemsHeader:"Sample Card Header",subTitle:"Sample Subtitle",items:["Sample item 1","Sample item 2","Sample item 3"]}}},Alternate={args:{isAlternate:!0,card:{title:"Sample Card",itemsHeader:"Sample Card Header",subTitle:"Sample Subtitle",items:["Sample item 1","Sample item 2","Sample item 3"]}}},cards=[{title:"Sample Card",itemsHeader:"Sample Card Header",subTitle:"Sample Subtitle",items:["Sample item 1","Sample item 2","Sample item 3"]},{title:"Sample Card",itemsHeader:"Sample Card Header",subTitle:"Sample Subtitle",items:["Sample item 1","Sample item 2","Sample item 3"]},{title:"Sample Card",itemsHeader:"Sample Card Header",subTitle:"Sample Subtitle",items:["Sample item 1","Sample item 2","Sample item 3"]},{title:"Sample Card",itemsHeader:"Sample Card Header",subTitle:"Sample Subtitle",items:["Sample item 1","Sample item 2","Sample item 3"]}],CardList={args:{},render:()=>({props:{cards},template:'\n<div class="card-list">\n  @for(card of cards; track $index) {\n    <app-resume-card [card]="card"></app-resume-card>\n  }\n</div>\n'})},AlternateCardList={args:{},render:()=>({props:{cards},template:'\n<div class="card-list">\n  @for(card of cards; track $index) {\n    <app-resume-card [isAlternate]="true" [card]="card"></app-resume-card>\n  }\n</div>\n'})},__namedExportsOrder=["Default","Alternate","CardList","AlternateCardList"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    card: {\n      title: 'Sample Card',\n      itemsHeader: 'Sample Card Header',\n      subTitle: 'Sample Subtitle',\n      items: ['Sample item 1', 'Sample item 2', 'Sample item 3']\n    }\n  }\n}",...Default.parameters?.docs?.source}}},Alternate.parameters={...Alternate.parameters,docs:{...Alternate.parameters?.docs,source:{originalSource:"{\n  args: {\n    isAlternate: true,\n    card: {\n      title: 'Sample Card',\n      itemsHeader: 'Sample Card Header',\n      subTitle: 'Sample Subtitle',\n      items: ['Sample item 1', 'Sample item 2', 'Sample item 3']\n    }\n  }\n}",...Alternate.parameters?.docs?.source}}},CardList.parameters={...CardList.parameters,docs:{...CardList.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: () => ({\n    props: {\n      cards\n    },\n    template: `\n<div class="card-list">\n  @for(card of cards; track $index) {\n    <app-resume-card [card]="card"></app-resume-card>\n  }\n</div>\n`\n  })\n}',...CardList.parameters?.docs?.source}}},AlternateCardList.parameters={...AlternateCardList.parameters,docs:{...AlternateCardList.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: () => ({\n    props: {\n      cards\n    },\n    template: `\n<div class="card-list">\n  @for(card of cards; track $index) {\n    <app-resume-card [isAlternate]="true" [card]="card"></app-resume-card>\n  }\n</div>\n`\n  })\n}',...AlternateCardList.parameters?.docs?.source}}}}}]);